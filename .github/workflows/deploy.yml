name: Deploy MaliBot DevContainer

on:
  push:
    branches: [ master ]

jobs:
  build:
    env:
      APP_PORT: 5000
      DATABASE_URL: postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}?schema=public
      DISCORD_BOT_CLIENT_ID: ${{ secrets.DISCORD_BOT_CLIENT_ID }}
      DISCORD_BOT_PUBLIC_KEY: ${{ secrets.DISCORD_BOT_PUBLIC_KEY }}
      DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
      POSTGRES_USERNAME: ${{ secrets.POSTGRES_USERNAME }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: malibot-postgres
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: malibot_db
      IMAGE_NAME: malibot
    name: Build Compose Containers
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Lowercase Owner Name
        run: echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Deploy Containers
        uses: TapTap21/docker-remote-deployment-action@v1.1
        with:
          remote_docker_host: ${{ secrets.REMOTE_DOCKER_HOST }}
          ssh_private_key: ${{ secrets.S_PRIVATE }}
          ssh_public_key: ${{ secrets.S_PUBLIC }}
          stack_file_name: docker-compose.yml
          docker_login_password: ${{ secrets.MY_TOKEN }}
          docker_login_user: ${{ env.OWNER_LC }}
          docker_login_registry : ghcr.io
          args: -p malibot-app -d