name: Deploy MaliBot DevContainer

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build Compose Containers
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy Project Direct to SSH Host
        uses: appleboy/ssh-action@v0.1.9
        env:
          APP_PORT: 80
          DISCORD_BOT_CLIENT_ID: ${{ secrets.DISCORD_BOT_CLIENT_ID }}
          DISCORD_BOT_PUBLIC_KEY: ${{ secrets.DISCORD_BOT_PUBLIC_KEY }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          POSTGRES_USERNAME: ${{ secrets.POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST: malibot-postgres
          POSTGRES_PORT: 5432
          POSTGRES_DATABASE: malibot_db
          DATABASE_URL: postgresql://${{ secrets.POSTGRES_USERNAME }}:${{ secrets.POSTGRES_PASSWORD }}@malibot-postgres:5432/malibot_db?schema=public
        with:
          host: ${{ secrets.REMOTE_DOCKER_HOST }}
          username: ${{ secrets.REMOTE_DOCKER_USER }}
          key: ${{ secrets.S_PRIVATE }}
          envs: APP_PORT,DISCORD_BOT_CLIENT_ID,DISCORD_BOT_PUBLIC_KEY,DISCORD_BOT_TOKEN,POSTGRES_USERNAME,POSTGRES_PASSWORD,POSTGRES_HOST,POSTGRES_PORT,POSTGRES_DATABASE,DATABASE_URL
          script: |
            docker container stop malibot-app malibot-postgres
            sudo rm -f -r mali-discord-bot-poc
            git clone https://github.com/PQPMath3ws/mali-discord-bot-poc.git
            cd mali-discord-bot-poc
            docker-compose up --build --force-recreate -d